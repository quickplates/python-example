---
version: "3"

tasks:
  fetch-template:
    desc: Fetch template updates
    interactive: true
    env:
      GIT_CONFIG_COUNT: 1
      GIT_CONFIG_KEY_0: commit.gpgsign
      GIT_CONFIG_VALUE_0: false
    cmds:
      - >
        copier
        --answers-file
        .copier-answers.yaml
        {{.CLI_ARGS}}
        update
  update-flake-lock:
    desc: Update flake.lock
    cmds:
      - >
        nix
        --accept-flake-config
        --extra-experimental-features 'nix-command flakes'
        --no-warn-dirty
        flake
        update
        {{.CLI_ARGS}}
  fmt:
    desc: Format files
    cmds:
      - >
        trunk
        fmt
        {{.CLI_ARGS}}
  lint:
    desc: Lint files
    cmds:
      - >
        trunk
        check
        {{.CLI_ARGS}}
  install-docs:
    desc: Install docs dependencies
    dir: docs
    cmds:
      - >
        npm
        install
        {{.CLI_ARGS}}
  install-docs-quietly:
    desc: Install docs dependencies quietly
    internal: true
    dir: docs
    cmds:
      - >
        npm
        install
        --prefer-offline
        --no-audit
        --no-fund
        --quiet
        --no-progress
  docs:
    desc: Run docusaurus
    dir: docs
    interactive: true
    deps:
      - task: install-docs-quietly
    cmds:
      - >
        npm
        run
        docs
        --
        {{.CLI_ARGS}}
  test-docs:
    desc: Test docs
    dir: docs
    deps:
      - task: install-docs-quietly
    cmds:
      - >
        npm
        run
        test
        --
        {{.CLI_ARGS}}
  update-docs-deps:
    desc: Update docs dependencies
    dir: docs
    deps:
      - task: install-docs-quietly
    cmds:
      - >
        npm
        run
        update
        --
        {{.CLI_ARGS}}
  clean:
    desc: Clean virtualenv
    cmds:
      - >
        rm
        --recursive
        --force
        {{.CLI_ARGS}}
        .venv
  venv:
    desc: Create virtualenv
    deps:
      - task: clean
        vars:
          CLI_ARGS: ""
    cmds:
      - >
        python
        -m
        venv
        {{.CLI_ARGS}}
        .venv
  install:
    desc: Install package
    deps:
      - task: venv
        vars:
          CLI_ARGS: ""
    cmds:
      - >
        source
        .venv/bin/activate
        &&
        poetry
        install
        --sync
        --no-interaction
        {{.CLI_ARGS}}
  install-quietly:
    desc: Install package quietly
    internal: true
    deps:
      - task: venv
        vars:
          CLI_ARGS: ""
    cmds:
      - >
        source
        .venv/bin/activate
        &&
        poetry
        install
        --sync
        --no-interaction
        --quiet
  update:
    desc: Update dependencies
    deps:
      - task: venv
        vars:
          CLI_ARGS: ""
    cmds:
      - >
        source
        .venv/bin/activate
        &&
        poetry
        update
        --no-interaction
        {{.CLI_ARGS}}
  update-lock:
    desc: Update dependencies versions in lock file
    deps:
      - task: venv
        vars:
          CLI_ARGS: ""
    cmds:
      - >
        source
        .venv/bin/activate
        &&
        poetry
        lock
        --no-interaction
        {{.CLI_ARGS}}
  bump:
    desc: Bump version
    cmds:
      - >
        source
        .venv/bin/activate
        &&
        poetry
        version
        {{.CLI_ARGS | default "patch"}}
  test:
    desc: Run tests
    deps:
      - task: install-quietly
    cmds:
      - >
        source
        .venv/bin/activate
        &&
        pytest
        {{.CLI_ARGS}}
  run:
    desc: Run package
    deps:
      - task: install-quietly
    cmds:
      - >
        source
        .venv/bin/activate
        &&
        python-example
        {{.CLI_ARGS}}
  docker-build:
    desc: Build docker image
    cmds:
      - >
        docker
        build
        --tag
        python-example
        {{.CLI_ARGS}}
        .
  docker:
    desc: Run docker image
    deps:
      - task: docker-build
        vars:
          CLI_ARGS: ""
    cmds:
      - >
        docker
        run
        --rm
        --interactive
        --tty
        python-example
        {{.CLI_ARGS}}
